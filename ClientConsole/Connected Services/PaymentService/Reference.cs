//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientConsole.PaymentService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PaymentService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WcfServicePayment.CompositeType GetDataUsingDataContract(WcfServicePayment.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfServicePayment.CompositeType> GetDataUsingDataContractAsync(WcfServicePayment.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        DTO.User GetUserById(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<DTO.User> GetUserByIdAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByCardId", ReplyAction="http://tempuri.org/IService1/GetUserByCardIdResponse")]
        DTO.User GetUserByCardId(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByCardId", ReplyAction="http://tempuri.org/IService1/GetUserByCardIdResponse")]
        System.Threading.Tasks.Task<DTO.User> GetUserByCardIdAsync(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByUsername", ReplyAction="http://tempuri.org/IService1/GetUserByUsernameResponse")]
        DTO.User GetUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserByUsername", ReplyAction="http://tempuri.org/IService1/GetUserByUsernameResponse")]
        System.Threading.Tasks.Task<DTO.User> GetUserByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCredit", ReplyAction="http://tempuri.org/IService1/AddCreditResponse")]
        decimal AddCredit(DTO.User user, decimal credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCredit", ReplyAction="http://tempuri.org/IService1/AddCreditResponse")]
        System.Threading.Tasks.Task<decimal> AddCreditAsync(DTO.User user, decimal credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBalance", ReplyAction="http://tempuri.org/IService1/GetBalanceResponse")]
        string GetBalance(DTO.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBalance", ReplyAction="http://tempuri.org/IService1/GetBalanceResponse")]
        System.Threading.Tasks.Task<string> GetBalanceAsync(DTO.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Print", ReplyAction="http://tempuri.org/IService1/PrintResponse")]
        decimal Print(DTO.User user, int nbCopies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Print", ReplyAction="http://tempuri.org/IService1/PrintResponse")]
        System.Threading.Tasks.Task<decimal> PrintAsync(DTO.User user, int nbCopies);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClientConsole.PaymentService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClientConsole.PaymentService.IService1>, ClientConsole.PaymentService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WcfServicePayment.CompositeType GetDataUsingDataContract(WcfServicePayment.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfServicePayment.CompositeType> GetDataUsingDataContractAsync(WcfServicePayment.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public DTO.User GetUserById(int uid) {
            return base.Channel.GetUserById(uid);
        }
        
        public System.Threading.Tasks.Task<DTO.User> GetUserByIdAsync(int uid) {
            return base.Channel.GetUserByIdAsync(uid);
        }
        
        public DTO.User GetUserByCardId(int cardId) {
            return base.Channel.GetUserByCardId(cardId);
        }
        
        public System.Threading.Tasks.Task<DTO.User> GetUserByCardIdAsync(int cardId) {
            return base.Channel.GetUserByCardIdAsync(cardId);
        }
        
        public DTO.User GetUserByUsername(string username) {
            return base.Channel.GetUserByUsername(username);
        }
        
        public System.Threading.Tasks.Task<DTO.User> GetUserByUsernameAsync(string username) {
            return base.Channel.GetUserByUsernameAsync(username);
        }
        
        public decimal AddCredit(DTO.User user, decimal credit) {
            return base.Channel.AddCredit(user, credit);
        }
        
        public System.Threading.Tasks.Task<decimal> AddCreditAsync(DTO.User user, decimal credit) {
            return base.Channel.AddCreditAsync(user, credit);
        }
        
        public string GetBalance(DTO.User user) {
            return base.Channel.GetBalance(user);
        }
        
        public System.Threading.Tasks.Task<string> GetBalanceAsync(DTO.User user) {
            return base.Channel.GetBalanceAsync(user);
        }
        
        public decimal Print(DTO.User user, int nbCopies) {
            return base.Channel.Print(user, nbCopies);
        }
        
        public System.Threading.Tasks.Task<decimal> PrintAsync(DTO.User user, int nbCopies) {
            return base.Channel.PrintAsync(user, nbCopies);
        }
    }
}
